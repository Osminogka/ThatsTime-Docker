{"ast":null,"code":"import RecordCard from '../view/RecordCard.vue';\nimport CustomHideShow from '@/view/CustomHideShow.vue';\nimport DateSelector from '@/view/DateSelector.vue';\nimport { getRecords, getCertainRecord, getRecordsFromServer } from '../core/userRecords';\nimport { todayDate } from '@/core/month';\nimport { ref, onBeforeMount } from 'vue';\nexport default {\n  __name: 'RecordList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    onBeforeMount(() => {\n      getRecordsFromServer();\n      records.value.find(record => record.showType == 0).records = getRecords(todayDate.getDate());\n    });\n    const records = ref([{\n      showType: -7,\n      records: [],\n      isGotBefore: false,\n      isHidden: true\n    }, {\n      showType: 0,\n      records: [],\n      isGotBefore: false,\n      isHidden: false\n    }, {\n      showType: 7,\n      records: [],\n      isGotBefore: false,\n      isHidden: true\n    }, {\n      showType: -1,\n      records: []\n    }]);\n    function getRecordsLocal(date) {\n      records.value.find(record => record.showType == date).isHidden = !records.value.find(record => record.showType == date).isHidden;\n      if (records.value.find(record => record.showType == date).isGotBefore) return;\n      records.value.find(record => record.showType == date).records = getRecords(todayDate.getDate() + parseInt(date));\n      records.value.find(record => record.showType == date).isGotBefore = true;\n    }\n    function getVisibility(showType) {\n      return !records.value.find(record => record.showType == showType).isHidden;\n    }\n    const selectedDay = ref(null);\n    const selectedMonth = ref(null);\n    const selectedYear = ref(null);\n    function searchRecord() {\n      let date = {\n        day: selectedDay.value,\n        month: selectedMonth.value,\n        year: selectedYear.value\n      };\n      records.value.find(record => record.showType == '-1').records = getCertainRecord(date);\n    }\n    const __returned__ = {\n      records,\n      getRecordsLocal,\n      getVisibility,\n      selectedDay,\n      selectedMonth,\n      selectedYear,\n      searchRecord,\n      RecordCard,\n      CustomHideShow,\n      DateSelector,\n      get getRecords() {\n        return getRecords;\n      },\n      get getCertainRecord() {\n        return getCertainRecord;\n      },\n      get getRecordsFromServer() {\n        return getRecordsFromServer;\n      },\n      get todayDate() {\n        return todayDate;\n      },\n      ref,\n      onBeforeMount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["RecordCard","CustomHideShow","DateSelector","getRecords","getCertainRecord","getRecordsFromServer","todayDate","ref","onBeforeMount","records","value","find","record","showType","getDate","isGotBefore","isHidden","getRecordsLocal","date","parseInt","getVisibility","selectedDay","selectedMonth","selectedYear","searchRecord","day","month","year"],"sources":["/home/osminogka/Desktop/Programming/ThatsTime/vueapp/src/components/RecordList.vue"],"sourcesContent":["<script setup>\nimport RecordCard from '../view/RecordCard.vue'\nimport CustomHideShow from '@/view/CustomHideShow.vue';\nimport DateSelector from '@/view/DateSelector.vue';\nimport { getRecords, getCertainRecord,getRecordsFromServer } from '../core/userRecords'\nimport { todayDate } from '@/core/month';\n\nimport { ref, onBeforeMount } from 'vue';\n\nonBeforeMount(() => {\n    getRecordsFromServer();\n    records.value.find(record => record.showType == 0).records = getRecords(todayDate.getDate());\n});\n\nconst records = ref([\n    {\n        showType: -7,\n        records: [],\n        isGotBefore: false,\n        isHidden: true\n    },\n    {\n        showType: 0,\n        records: [],\n        isGotBefore: false,\n        isHidden: false\n    },\n    {\n        showType: 7,\n        records: [],\n        isGotBefore: false,\n        isHidden: true\n    },\n    {\n        showType: -1,\n        records: [],\n    }\n]);\n\nfunction getRecordsLocal(date){\n    records.value.find(record => record.showType == date).isHidden = !records.value.find(record => record.showType == date).isHidden;\n    if(records.value.find(record => record.showType == date).isGotBefore) \n        return;\n    records.value.find(record => record.showType == date).records = getRecords(todayDate.getDate() + parseInt(date));\n    records.value.find(record => record.showType == date).isGotBefore = true;\n}\n\nfunction getVisibility(showType){\n    return !records.value.find(record => record.showType == showType).isHidden;\n}\n\nconst selectedDay = ref(null);\nconst selectedMonth = ref(null);\nconst selectedYear = ref(null);\n\nfunction searchRecord(){\n    let date = {\n        day: selectedDay.value,\n        month: selectedMonth.value,\n        year: selectedYear.value\n    }\n    records.value.find(record => record.showType == '-1').records = getCertainRecord(date);\n}\n</script>\n\n<template>\n    <div class=\"container-records\">\n            <custom-hide-show :showInterface=\"records.find(record => record.showType == '-7').isHidden\"  @showList=\"getRecordsLocal\" :showType=\"'-7'\">\n                Last week\n            </custom-hide-show>\n            <Transition  name=\"fadey\">\n                <div v-if=\"getVisibility('-7')\">\n                    <div v-if=\"records.find(record => record.showType == '-7').records.length == 0\">No records</div>\n                    <div v-else  class=\"container-week\">\n                        <record-card v-for=\"(record, index) in records.find(record => record.showType == '-7').records\" :record=\"record\" :key=\"index\"/>\n                    </div>\n                </div>\n            </Transition>\n            <custom-hide-show :showInterface=\"records.find(record => record.showType == '0').isHidden\" @showList=\"getRecordsLocal\" :showType=\"'0'\">\n                Today\n            </custom-hide-show>\n            <Transition  name=\"fadey\">\n                <div v-if=\"getVisibility('0')\">\n                    <div v-if=\"records.find(record => record.showType == '0').records.length == 0\">No records</div>\n                    <div v-else  class=\"container-week\">\n                        <record-card v-for=\"(record, index) in records.find(record => record.showType == '0').records\" :record=\"record\" :key=\"index\"/>\n                    </div>\n                </div>\n            </Transition>\n            <custom-hide-show :showInterface=\"records.find(record => record.showType == '7').isHidden\" @showList=\"getRecordsLocal\" :showType=\"'7'\">\n                Next week\n            </custom-hide-show>\n            <Transition name=\"fadey\">\n                <div v-if=\"getVisibility('7')\">\n                    <div v-if=\"records.find(record => record.showType == '7').records.length == 0\">No records</div>\n                    <div v-else  class=\"container-week\">\n                        <record-card v-for=\"(record, index) in records.find(record => record.showType == '7').records\" :record=\"record\" :key=\"index\"/>\n                    </div>\n                </div>\n            </Transition>\n        <div class=\"search-record-box\">\n            <date-selector v-model=\"selectedDay\" type=\"day\"/>\n            <date-selector v-model=\"selectedMonth\" type=\"month\"/>\n            <date-selector v-model=\"selectedYear\" type=\"year\"/>\n            <button @click=\"searchRecord\" class=\"search-button custom-button\"></button>\n        </div> \n        <div class=\"container-week\">\n            <record-card v-for=\"(record, index) in records.find(record => record.showType == '-1').records\" :record=\"record\" :key=\"index\"/>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n\n.container-records{\n    margin: 0.2em;\n}\n\n.container-week{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n\n@media  (max-width: 600px) {\n    .container-week{\n        justify-content: center;\n    }\n}\n\n.fadey-enter-active, .fadey-leave-active {\n    transition: all 0.3s ease-out;\n}\n\n.fadey-leave-active {\n    transition: all 0.3 ease-out;\n}\n\n.fadey-enter-from,\n.fadey-leave-to {\n    transform: translateY(-50px);\n    opacity: 0;\n}\n\n.search-record-box{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.search-button{\n    background-image: url('../assets/svg/Records/search.svg');\n    background-color: white;\n    width: 2em;\n    height: 2em;\n    margin-left: 10px;\n    cursor: pointer;\n}\n\n</style>"],"mappings":"AACA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,UAAU,EAAEC,gBAAgB,EAACC,oBAAoB,QAAQ,qBAAqB;AACvF,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,GAAG,EAAEC,aAAa,QAAQ,KAAK;;;;;;;IAExCA,aAAa,CAAC,MAAM;MAChBH,oBAAoB,CAAC,CAAC;MACtBI,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAI,CAAC,CAAC,CAACJ,OAAO,GAAGN,UAAU,CAACG,SAAS,CAACQ,OAAO,CAAC,CAAC,CAAC;IAChG,CAAC,CAAC;IAEF,MAAML,OAAO,GAAGF,GAAG,CAAC,CAChB;MACIM,QAAQ,EAAE,CAAC,CAAC;MACZJ,OAAO,EAAE,EAAE;MACXM,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACd,CAAC,EACD;MACIH,QAAQ,EAAE,CAAC;MACXJ,OAAO,EAAE,EAAE;MACXM,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACd,CAAC,EACD;MACIH,QAAQ,EAAE,CAAC;MACXJ,OAAO,EAAE,EAAE;MACXM,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACd,CAAC,EACD;MACIH,QAAQ,EAAE,CAAC,CAAC;MACZJ,OAAO,EAAE;IACb,CAAC,CACJ,CAAC;IAEF,SAASQ,eAAeA,CAACC,IAAI,EAAC;MAC1BT,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIK,IAAI,CAAC,CAACF,QAAQ,GAAG,CAACP,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIK,IAAI,CAAC,CAACF,QAAQ;MAChI,IAAGP,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIK,IAAI,CAAC,CAACH,WAAW,EAChE;MACJN,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIK,IAAI,CAAC,CAACT,OAAO,GAAGN,UAAU,CAACG,SAAS,CAACQ,OAAO,CAAC,CAAC,GAAGK,QAAQ,CAACD,IAAI,CAAC,CAAC;MAChHT,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIK,IAAI,CAAC,CAACH,WAAW,GAAG,IAAI;IAC5E;IAEA,SAASK,aAAaA,CAACP,QAAQ,EAAC;MAC5B,OAAO,CAACJ,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAAC,CAACG,QAAQ;IAC9E;IAEA,MAAMK,WAAW,GAAGd,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMe,aAAa,GAAGf,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMgB,YAAY,GAAGhB,GAAG,CAAC,IAAI,CAAC;IAE9B,SAASiB,YAAYA,CAAA,EAAE;MACnB,IAAIN,IAAI,GAAG;QACPO,GAAG,EAAEJ,WAAW,CAACX,KAAK;QACtBgB,KAAK,EAAEJ,aAAa,CAACZ,KAAK;QAC1BiB,IAAI,EAAEJ,YAAY,CAACb;MACvB,CAAC;MACDD,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,IAAI,IAAI,CAAC,CAACJ,OAAO,GAAGL,gBAAgB,CAACc,IAAI,CAAC;IAC1F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}