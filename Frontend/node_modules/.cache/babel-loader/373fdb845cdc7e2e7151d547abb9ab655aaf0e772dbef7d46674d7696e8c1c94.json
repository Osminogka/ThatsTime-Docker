{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"table-container\"\n};\nconst _hoisted_3 = {\n  class: \"month-header\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Mon\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tue\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Wed\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Thu\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Fri\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Sat\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Sun\")])], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"arrow-container\"\n};\nconst _hoisted_7 = {\n  class: \"form-for-record\"\n};\nconst _hoisted_8 = {\n  class: \"p-selected-day\"\n};\nconst _hoisted_9 = {\n  class: \"checkbox-container\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label-checkbox\"\n}, \"For Group\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label-checkbox\"\n}, \"Yourself\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_13 = [\"data-value\", \"data-list\"];\nconst _hoisted_14 = {\n  class: \"label\"\n};\nconst _hoisted_15 = {\n  key: 0\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"custom-label\"\n}, \"Select importance\", -1 /* HOISTED */);\nconst _hoisted_18 = [\"data-value\", \"data-list\"];\nconst _hoisted_19 = {\n  class: \"label\"\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = {\n  class: \"checkbox-container checkbox-container-time\"\n};\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label-checkbox\"\n}, \"Enter Time\", -1 /* HOISTED */);\nconst _hoisted_24 = {\n  key: 0\n};\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"custom-label\"\n}, \"Record Name\", -1 /* HOISTED */);\nconst _hoisted_26 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"custom-label\"\n}, \"Record Content\", -1 /* HOISTED */);\nconst _hoisted_28 = {\n  key: 1,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createTextVNode(_toDisplayString($setup.selectedMonthName) + \" \", 1 /* TEXT */), $setup.selectedYear ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($setup.selectedYear), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.weeks, (week, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(week, (day, index) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: index,\n        class: _normalizeClass({\n          'td-today': $setup.isTodayDate(day),\n          'td-common-day': !$setup.isTodayDate(day),\n          'td-null-day': day === null\n        })\n      }, [day !== null ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        onClick: _cache[0] || (_cache[0] = (...args) => $setup.animateCell && $setup.animateCell(...args)),\n        class: _normalizeClass([\"button-cell\", {\n          'button-cell-current-day': $setup.isTodayDate(day),\n          'button-cell-selected': day == $setup.recordCreationForm.selectedDay\n        }])\n      }, _toDisplayString(day), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.animateArrow(-1)),\n    class: \"left-arrow custom-button arrow\"\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.animateArrow(1)),\n    class: \"right-arrow custom-button arrow\"\n  })])]), _createElementVNode(\"form\", _hoisted_7, [_createElementVNode(\"p\", _hoisted_8, \"Selected day: \" + _toDisplayString($setup.recordCreationForm.selectedDay), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", {\n    id: \"input-checkbox\",\n    class: _normalizeClass([{\n      'input-checkbox-checked': $setup.recordCreationForm.showGroupList\n    }, \"input-checkbox\"]),\n    onClick: _cache[3] || (_cache[3] = $event => $setup.selectObjectType('Group'))\n  }, null, 2 /* CLASS */), _hoisted_10, _createElementVNode(\"div\", {\n    id: \"input-checkbox-yourself\",\n    class: _normalizeClass([{\n      'input-checkbox-checked': $setup.recordCreationForm.yourSelf\n    }, \"input-checkbox\"]),\n    onClick: _cache[4] || (_cache[4] = $event => $setup.selectObjectType('Yourself')),\n    style: {\n      \"margin-left\": \"1em\"\n    }\n  }, null, 2 /* CLASS */), _hoisted_11]), $setup.errorList.selectedObject.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, _toDisplayString($setup.errorList.selectedObject.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode(_Transition, {\n    name: \"showTimeEnter\"\n  }, {\n    default: _withCtx(() => [!$setup.recordCreationForm.yourSelf ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"aselect\",\n      \"data-value\": $setup.recordCreationForm.selectedObject,\n      \"data-list\": $setup.recordCreationForm.showGroupList ? $setup.groupList : $setup.friendList\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([{\n        'error-input': $setup.errorList.selectedObject.error\n      }, \"selector\"]),\n      onClick: _cache[5] || (_cache[5] = $event => $setup.toggleObjectList())\n    }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", null, _toDisplayString($setup.recordCreationForm.selectedObject), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"arrow-select\", {\n        expanded: $setup.recordCreationForm.showObjectList\n      }])\n    }, null, 2 /* CLASS */), _createVNode(_Transition, {\n      name: \"fadey\"\n    }, {\n      default: _withCtx(() => [$setup.recordCreationForm.showObjectList ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recordCreationForm.showGroupList ? $setup.groupList : $setup.friendList, (item, index) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          class: _normalizeClass({\n            current: item === _ctx.value\n          }),\n          onClick: $event => $setup.selectObjectList(item.name),\n          key: index\n        }, _toDisplayString(item.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_16);\n      }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })], 2 /* CLASS */)], 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _hoisted_17, _createElementVNode(\"div\", {\n    class: \"aselect\",\n    \"data-value\": $setup.recordCreationForm.importance,\n    \"data-list\": $setup.importanceList.name\n  }, [_createElementVNode(\"div\", {\n    class: \"selector\",\n    onClick: _cache[6] || (_cache[6] = $event => $setup.toggleImportance())\n  }, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", null, _toDisplayString($setup.importanceList.find(item => item.value === $setup.recordCreationForm.importance).name), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"arrow-select\", {\n      expanded: $setup.recordCreationForm.showImportanceList\n    }])\n  }, null, 2 /* CLASS */), _createVNode(_Transition, {\n    name: \"fadey\"\n  }, {\n    default: _withCtx(() => [$setup.recordCreationForm.showImportanceList ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"ul\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.importanceList, (item, index) => {\n      return _createElementVNode(\"li\", {\n        class: _normalizeClass({\n          current: item === _ctx.value\n        }),\n        onClick: $event => $setup.selectImportance(item.name),\n        key: index\n      }, _toDisplayString(item.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_21);\n    }), 64 /* STABLE_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])], 8 /* PROPS */, _hoisted_18), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", {\n    id: \"input-checkbox\",\n    class: _normalizeClass([{\n      'input-checkbox-checked': $setup.recordCreationForm.enterTime\n    }, \"input-checkbox\"]),\n    onClick: _cache[7] || (_cache[7] = $event => $setup.recordCreationForm.enterTime = !$setup.recordCreationForm.enterTime)\n  }, null, 2 /* CLASS */), _hoisted_23]), _createVNode(_Transition, {\n    name: \"showTimeEnter\"\n  }, {\n    default: _withCtx(() => [$setup.recordCreationForm.enterTime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createVNode($setup[\"TimeSelector\"], {\n      modelValue: $setup.recordCreationForm.hour,\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.recordCreationForm.hour = $event),\n      type: \"hour\",\n      error: $setup.errorList.hour.error\n    }, null, 8 /* PROPS */, [\"modelValue\", \"error\"]), _createVNode($setup[\"TimeSelector\"], {\n      modelValue: $setup.recordCreationForm.minute,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.recordCreationForm.minute = $event),\n      type: \"minute\",\n      error: $setup.errorList.minute.error\n    }, null, 8 /* PROPS */, [\"modelValue\", \"error\"])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", null, [_hoisted_25, $setup.errorList.recordName.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_26, _toDisplayString($setup.errorList.recordName.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-form\", {\n      'error-input': $setup.errorList.recordName.error\n    }]),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.recordCreationForm.recordName = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.recordCreationForm.recordName]]), _hoisted_27, $setup.errorList.recordContent.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_28, _toDisplayString($setup.errorList.recordContent.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"textarea\", {\n    class: _normalizeClass([\"textarea-form input-record-content\", {\n      'error-input': $setup.errorList.recordContent.error\n    }]),\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.recordCreationForm.recordContent = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.recordCreationForm.recordContent]])]), _createElementVNode(\"button\", {\n    onClick: _withModifiers($setup.submitForm, [\"prevent\"]),\n    class: \"submit-button\"\n  }, \"Create Record\"), _createVNode(_Transition, {\n    name: \"showTimeEnter\"\n  }, {\n    default: _withCtx(() => [$setup.recordCreationStatus.showMessage ? (_openBlock(), _createElementBlock(\"p\", {\n      key: 0,\n      class: _normalizeClass([\"creation-status\", {\n        'creation-successful': $setup.recordCreationStatus.status,\n        'creation-failed': !$setup.recordCreationStatus.status\n      }])\n    }, _toDisplayString($setup.recordCreationStatus.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createTextVNode","_toDisplayString","$setup","selectedMonthName","selectedYear","_hoisted_4","_createCommentVNode","_hoisted_5","_Fragment","_renderList","weeks","week","index","day","_normalizeClass","isTodayDate","onClick","_cache","args","animateCell","recordCreationForm","selectedDay","_hoisted_6","$event","animateArrow","_hoisted_7","_hoisted_8","_hoisted_9","id","showGroupList","selectObjectType","_hoisted_10","yourSelf","style","_hoisted_11","errorList","selectedObject","error","_hoisted_12","message","_createVNode","_Transition","name","default","_withCtx","groupList","friendList","toggleObjectList","_hoisted_14","expanded","showObjectList","_hoisted_15","item","current","_ctx","value","selectObjectList","_hoisted_16","_","_hoisted_13","_hoisted_17","importance","importanceList","toggleImportance","_hoisted_19","find","showImportanceList","_hoisted_20","selectImportance","_hoisted_21","_hoisted_18","_hoisted_22","enterTime","_hoisted_23","_hoisted_24","modelValue","hour","type","minute","_hoisted_25","recordName","_hoisted_26","_hoisted_27","recordContent","_hoisted_28","_withModifiers","submitForm","recordCreationStatus","showMessage","status"],"sources":["/home/osminogka/Desktop/Programming/ThatsTime/vueapp/src/components/MainTable.vue"],"sourcesContent":["<script setup>\nimport('../assets/css/table.css')\nimport('../assets/css/mainForm.css')\nimport('../assets/css/user.css')\nimport('../assets/css/customSelect.css')\n\nimport TimeSelector from '@/view/TimeSelector.vue'\n\nimport { friendList, groupList, user} from '../core/userInfo'\nimport {todayDate, monthNames} from '../core/month'\nimport { postRecord } from '@/core/userRecords';\n\nimport {ref, computed, reactive, toRaw } from 'vue';\n\nconst recordCreationStatus = reactive({\n    status: true,\n    message: '',\n    showMessage: false\n})\n\nasync function submitForm() {\n    let result = postRecord({...toRaw(recordCreationForm)});\n    for(let key in errorList) \n        errorList[key].error = false;\n    if(result.length > 0){\n        for(let key of result) \n            errorList[key].error = true;\n        recordCreationStatus.showMessage = true;\n        recordCreationStatus.message = 'Record creation failed!';\n        recordCreationStatus.status = false;\n        clearInputs(false);\n    }\n    else{\n        recordCreationStatus.showMessage = true;\n        recordCreationStatus.message = 'Record created successfully!';\n        recordCreationStatus.status = true;\n        clearInputs(true);\n    }\n    setTimeout(() => {\n        recordCreationStatus.showMessage = false;\n    }, 3000);\n}\n\nfunction clearInputs(wasSuccessful) {\n    for (let key in errorList) {\n        let errorProp = errorList[key];\n        if(wasSuccessful){\n            errorProp.error = false;\n            if(key !== 'selectedObject')\n                recordCreationForm[key] = errorProp.default;\n        }\n        if(errorProp.error && !wasSuccessful)\n            recordCreationForm[key] = errorProp.default;\n    }\n}\n\n\nconst importanceList = [\n    { name: 'Low', value: 0 },\n    { name: 'Medium', value: 1 },\n    { name: 'High', value: 2 }\n];\n\nconst recordCreationForm = reactive({\n    selectedYear: todayDate.getFullYear(),\n    selectedDay: 1,\n    selectedMonth: todayDate.getMonth(),\n    showGroupList: false,\n    yourSelf: false,\n    selectedObject: friendList.value[0].name,\n    importance: 0,\n    enterTime: false,\n    hour: 0,\n    minute: 0,\n    recordName: '',\n    recordContent: '',\n    showObjectList: false,\n    showImportanceList: false\n});\n\nconst errorList = reactive({\n    selectedYear: {\n        error: false,\n        message: 'Invalid year',\n        default: todayDate.getFullYear()\n    },\n    selectedDay: {\n        error: false,\n        message: 'Invalid day',\n        default: 1\n    },\n    selectedMonth: {\n        error: false,\n        message: 'Invalid month',\n        default: todayDate.getMonth()\n    },\n    selectedObject: {\n        error: false,\n        message: 'Invalid person selected',\n    },\n    hour: {\n        error: false,\n        message: 'Invalid hour',\n        default: 0\n    },\n    minute: {\n        error: false,\n        message: 'Invalid minute',\n        default: 0\n    },\n    recordName: {\n        error: false,\n        message: recordCreationForm.recordName.length <= 0 ? 'Record name is too short' : 'Record name is too long',\n        default: ''\n    },\n    recordContent: {\n        error: false,\n        message: recordCreationForm.recordContent <= 0 ? 'Record content is too long' : 'Record content is too short',\n        default: ''\n    }\n});\n\nlet currentYear = todayDate.getFullYear();\nlet daysInMonth = ref(new Date(currentYear, todayDate.getMonth() + 1, 0).getDate());\nlet firstDayOfMonth = ref(new Date(currentYear, todayDate.getMonth(), 1).getDay() - 1);\n\nlet selectedMonthName = computed(() => monthNames[recordCreationForm.selectedMonth]);\nlet selectedYear = computed(() => recordCreationForm.selectedYear !== todayDate.getFullYear() ? recordCreationForm.selectedYear : '');\n\nlet isTodayDate = (day) => {\n    return day === todayDate.getDate() && todayDate.getMonth() === recordCreationForm.selectedMonth;\n}\n\nfunction toggleObjectList() {\n    if(recordCreationForm.showImportanceList)\n        recordCreationForm.showImportanceList = false;\n    recordCreationForm.showObjectList = !recordCreationForm.showObjectList;\n}\nfunction selectObjectList(option) {\n    recordCreationForm.selectedObject = option;\n}\n\nfunction selectObjectType(option) {\n    if(option === 'Group'){\n        recordCreationForm.showGroupList = !recordCreationForm.showGroupList;\n        recordCreationForm.yourSelf = false;\n        recordCreationForm.selectedObject = recordCreationForm.showGroupList? groupList.value[0].name : friendList.value[0].name;\n    }\n    else{\n        recordCreationForm.yourSelf = !recordCreationForm.yourSelf;\n        recordCreationForm.showGroupList = false;\n        recordCreationForm.selectedObject = recordCreationForm.yourSelf? user.value.name : friendList.value[0].name;\n    }\n}\n\nfunction toggleImportance() {\n    recordCreationForm.showImportanceList = !recordCreationForm.showImportanceList;\n}\n\nfunction selectImportance(option) {\n    recordCreationForm.importance = importanceList.find(item => item.name === option).value;\n}\n\nlet animateCell = (event) => {\n    let button = event.target;\n    button.classList.add('animate');\n    setTimeout(() => {\n        button.classList.remove('animate');\n        recordCreationForm.selectedDay = parseInt(event.target.textContent);\n    }, 300);\n}\n\nlet animateArrow = (monthChange) => {\n    recordCreationForm.selectedDay = 1;\n    if(recordCreationForm.selectedMonth + monthChange < 0) {\n        recordCreationForm.selectedMonth = 11;\n        recordCreationForm.selectedYear--;\n    } else if(recordCreationForm.selectedMonth + monthChange > 11) {\n        recordCreationForm.selectedMonth = 0;\n        recordCreationForm.selectedYear++;\n    } else\n        recordCreationForm.selectedMonth += monthChange;\n    daysInMonth.value = new Date(recordCreationForm.selectedYear, recordCreationForm.selectedMonth + 1, 0).getDate();\n    firstDayOfMonth.value = new Date(recordCreationForm.selectedYear, recordCreationForm.selectedMonth , 1).getDay() - 1;\n    let button = event.target;\n    button.classList.add('animate');\n    setTimeout(() => {\n        button.classList.remove('animate');\n    }, 300);\n}\n\nconst weeks = computed(() => {\n    let weeks = [];\n    let week = [];\n    let day = 1;\n\n  // Fill the first week of the month with empty days until the first day of the month\n    for (let i = 0; i < 7; i++) {\n        if (i < firstDayOfMonth.value) {\n            week.push(null);\n        } else {\n            week.push(day++);\n        }\n    }\n    weeks.push(week);\n\n// Fill the rest of the weeks\n    while (day <= daysInMonth.value) {\n        week = [];\n        for (let i = 0; i < 7; i++) {\n            if(day <= daysInMonth.value)\n                week.push(day++);\n            else\n                week.push(null);\n        }\n        weeks.push(week);\n    }\n    return weeks;\n});\n</script>\n\n<template>\n    <div class=\"container\">\n        <div class=\"table-container\">\n            <p class=\"month-header\">{{ selectedMonthName }} <span v-if=\"selectedYear\">{{ selectedYear }}</span></p>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Mon</th>\n                        <th>Tue</th>\n                        <th>Wed</th>\n                        <th>Thu</th>\n                        <th>Fri</th>\n                        <th>Sat</th>\n                        <th>Sun</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(week, index) in weeks\" :key=\"index\">\n                        <td v-for=\"(day, index) in week\" :key=\"index\" \n                            :class=\"{ 'td-today': isTodayDate(day), 'td-common-day':!isTodayDate(day), 'td-null-day': day === null }\">\n                                <button v-if=\"day !== null\" @click=\"animateCell\" class=\"button-cell\" \n                                    :class=\"{'button-cell-current-day':isTodayDate(day), 'button-cell-selected': day == recordCreationForm.selectedDay}\">\n                                    {{ day }}\n                                </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"arrow-container\">\n                <button @click=\"animateArrow(-1)\" class=\"left-arrow custom-button arrow\" />\n                <button @click=\"animateArrow(1)\" class=\"right-arrow custom-button arrow\" />\n            </div>\n        </div>\n        <form class=\"form-for-record\">\n            <p class=\"p-selected-day\">Selected day: {{ recordCreationForm.selectedDay }}</p>\n            <div class=\"checkbox-container\">\n                <div id=\"input-checkbox\" :class=\"{'input-checkbox-checked': recordCreationForm.showGroupList}\" class=\"input-checkbox\" \n                    @click=\"selectObjectType('Group')\"></div>\n                <label class=\"label-checkbox\">For Group</label>\n                <div id=\"input-checkbox-yourself\" :class=\"{ 'input-checkbox-checked': recordCreationForm.yourSelf }\" class=\"input-checkbox\" \n                    @click=\"selectObjectType('Yourself')\" style=\"margin-left: 1em;\"></div>\n                <label class=\"label-checkbox\">Yourself</label>\n            </div>\n            <p class=\"error-message\" v-if=\"errorList.selectedObject.error\">{{ errorList.selectedObject.message }}</p>\n            <Transition name=\"showTimeEnter\">\n                <div v-if=\"!recordCreationForm.yourSelf\" class=\"aselect\" :data-value=\"recordCreationForm.selectedObject\" :data-list=\"recordCreationForm.showGroupList? groupList : friendList\">\n                    <div :class=\"{'error-input': errorList.selectedObject.error }\" class=\"selector\" @click=\"toggleObjectList()\">\n                        <div class=\"label\">\n                            <span>{{ recordCreationForm.selectedObject }}</span>\n                        </div>\n                        <div class=\"arrow-select\" :class=\"{ expanded : recordCreationForm.showObjectList }\"></div>\n                        <Transition name=\"fadey\">\n                            <div v-if=\"recordCreationForm.showObjectList\">\n                                <ul>\n                                    <li :class=\"{ current : item === value }\" v-for=\"(item, index) in recordCreationForm.showGroupList? groupList : friendList\" \n                                    @click=\"selectObjectList(item.name)\" :key=\"index\">\n                                        {{ item.name }}\n                                    </li>\n                                </ul>\n                            </div>\n                        </Transition>\n                    </div>\n                </div>\n            </Transition>\n            <label class=\"custom-label\">Select importance</label>\n            <div class=\"aselect\" :data-value=\"recordCreationForm.importance\" :data-list=\"importanceList.name\">\n                <div class=\"selector\" @click=\"toggleImportance()\">\n                    <div class=\"label\">\n                        <span>{{ importanceList.find(item => item.value === recordCreationForm.importance).name }}</span>\n                    </div>\n                    <div class=\"arrow-select\" :class=\"{ expanded : recordCreationForm.showImportanceList }\"></div>\n                    <Transition name=\"fadey\">\n                        <div v-if=\"recordCreationForm.showImportanceList\">\n                            <ul>\n                                <li :class=\"{ current : item === value }\" v-for=\"(item, index) in importanceList\" \n                                @click=\"selectImportance(item.name)\" :key=\"index\">\n                                    {{ item.name }}\n                                </li>\n                            </ul>\n                        </div>\n                    </Transition>\n                </div>\n            </div>\n            <div class=\"checkbox-container checkbox-container-time\">\n                <div id=\"input-checkbox\" :class=\"{'input-checkbox-checked': recordCreationForm.enterTime}\" class=\"input-checkbox\" @click=\"recordCreationForm.enterTime = !recordCreationForm.enterTime\"></div>\n                <label class=\"label-checkbox\">Enter Time</label>\n            </div>\n            <Transition name=\"showTimeEnter\">\n                <div v-if=\"recordCreationForm.enterTime\">\n                    <time-selector v-model=\"recordCreationForm.hour\" type=\"hour\" :error=\"errorList.hour.error\"/>\n                    <time-selector v-model=\"recordCreationForm.minute\" type=\"minute\" :error=\"errorList.minute.error\"/>\n                </div>\n            </Transition>\n            <div>\n                <label class=\"custom-label\">Record Name</label>\n                <p class=\"error-message\" v-if=\"errorList.recordName.error\">{{ errorList.recordName.message }}</p>\n                <input class=\"input-form\" :class=\"{'error-input':errorList.recordName.error}\" type=\"text\" v-model=\"recordCreationForm.recordName\" />\n                <label class=\"custom-label\">Record Content</label>\n                <p class=\"error-message\" v-if=\"errorList.recordContent.error\">{{ errorList.recordContent.message }}</p>\n                <textarea class=\"textarea-form input-record-content\" :class=\"{'error-input': errorList.recordContent.error}\"  v-model=\"recordCreationForm.recordContent\"></textarea>\n            </div>\n            <button @click.prevent=\"submitForm\" class=\"submit-button\">Create Record</button>\n            <Transition name=\"showTimeEnter\">\n                <p class=\"creation-status\" :class=\"{'creation-successful': recordCreationStatus.status, 'creation-failed': !recordCreationStatus.status}\" v-if=\"recordCreationStatus.showMessage\">{{ recordCreationStatus.message }}</p>\n            </Transition>\n        </form>\n    </div>\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}