{"ast":null,"code":"import CustomHideShow from '@/view/CustomHideShow.vue';\nimport { reactive, ref, onMounted } from 'vue';\nimport { vOnClickOutside } from '@vueuse/components';\nimport { friendList, groupList } from '../core/userInfo';\nexport default {\n  __name: 'MainHeader',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    import('../assets/css/header.css');\n    import('../assets/css/navigation.css');\n    import('../assets/css/nav-buttons.css');\n    import('../assets/css/user.css');\n    function hideSideBar() {\n      if (showInterface.showSideBar && event.target.id != 'showSideBar') {\n        showInterface.showSideBar = false;\n        rotateTag(true);\n      }\n    }\n    function hideUserNav() {\n      if (showUserNav.value && event.target.id != 'user-icon-button') showUserNav.value = false;\n    }\n    onMounted(() => {\n      window.addEventListener('scroll', hideSideBar);\n      window.addEventListener('scroll', hideUserNav);\n      let animateButton = document.getElementById('user-icon-button');\n      animateButton.addEventListener('click', () => {\n        animateButton.classList.add('animate');\n\n        // Remove the 'animate' class after the animation is finished\n        setTimeout(() => {\n          animateButton.classList.remove('animate');\n        }, 300);\n      });\n      const mainHeader = document.getElementById('main-header');\n      const sidebar = document.getElementById('sidebar');\n      let parentElement = mainHeader.parentElement;\n      let heightPercentage = mainHeader.offsetHeight / parentElement.offsetHeight * 100 - 13;\n      sidebar.style.height = 'calc(100% - ' + heightPercentage + 'px)';\n    });\n    function rotateTag(isExplicit = false) {\n      let tempProp = showInterface.showSideBar;\n      if (!isExplicit) tempProp = !tempProp;\n      showInterface.showSideBar = tempProp;\n      let new_value = tempProp ? 'rotate(90deg)' : \"rotate(0deg)\";\n      document.getElementById('showSideBar').style.transform = new_value;\n    }\n    function showList(list) {\n      showInterface[list] = !showInterface[list];\n    }\n    const showInterface = reactive({\n      showSideBar: false,\n      showFriendList: false,\n      showGroupList: false\n    });\n    const showUserNav = ref(false);\n\n    //const username = 'Osminogka';\n\n    const __returned__ = {\n      hideSideBar,\n      hideUserNav,\n      rotateTag,\n      showList,\n      showInterface,\n      showUserNav,\n      CustomHideShow,\n      reactive,\n      ref,\n      onMounted,\n      get vOnClickOutside() {\n        return vOnClickOutside;\n      },\n      get friendList() {\n        return friendList;\n      },\n      get groupList() {\n        return groupList;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["CustomHideShow","reactive","ref","onMounted","vOnClickOutside","friendList","groupList","hideSideBar","showInterface","showSideBar","event","target","id","rotateTag","hideUserNav","showUserNav","value","window","addEventListener","animateButton","document","getElementById","classList","add","setTimeout","remove","mainHeader","sidebar","parentElement","heightPercentage","offsetHeight","style","height","isExplicit","tempProp","new_value","transform","showList","list","showFriendList","showGroupList"],"sources":["/home/osminogka/Desktop/Programming/ThatsTime/vueapp/src/components/MainHeader.vue"],"sourcesContent":["<script setup>\nimport('../assets/css/header.css');\nimport('../assets/css/navigation.css');\nimport('../assets/css/nav-buttons.css');\nimport('../assets/css/user.css');\nimport CustomHideShow from '@/view/CustomHideShow.vue';\nimport { reactive, ref, onMounted } from 'vue';\nimport { vOnClickOutside } from '@vueuse/components'\nimport { friendList, groupList} from '../core/userInfo'\n\nfunction hideSideBar() {\n  if(showInterface.showSideBar && event.target.id != 'showSideBar')\n  {\n    showInterface.showSideBar = false;\n    rotateTag(true);\n  }\n}\n\nfunction hideUserNav() {\n  if(showUserNav.value && event.target.id != 'user-icon-button')\n    showUserNav.value = false;\n}\n\nonMounted(() => {\n  window.addEventListener('scroll', hideSideBar);\n  window.addEventListener('scroll', hideUserNav);\n  let animateButton = document.getElementById('user-icon-button');\n\n  animateButton.addEventListener('click', () => {\n    animateButton.classList.add('animate');\n\n    // Remove the 'animate' class after the animation is finished\n    setTimeout(() => {\n      animateButton.classList.remove('animate');\n    }, 300);\n});\n\n  const mainHeader = document.getElementById('main-header');\n  const sidebar = document.getElementById('sidebar');\n  let parentElement = mainHeader.parentElement;\n  let heightPercentage = (mainHeader.offsetHeight / parentElement.offsetHeight) * 100 - 13;\n  sidebar.style.height = 'calc(100% - ' + heightPercentage + 'px)';\n});\n\nfunction rotateTag(isExplicit = false) {\n  let tempProp = showInterface.showSideBar;\n  if(!isExplicit) tempProp = !tempProp;\n  showInterface.showSideBar = tempProp;\n  let new_value = tempProp ? 'rotate(90deg)' : \"rotate(0deg)\";\n  document.getElementById('showSideBar').style.transform = new_value;\n}\n\nfunction showList(list){\n  showInterface[list] = !showInterface[list];\n}\n\nconst showInterface = reactive({\n    showSideBar: false,\n    showFriendList: false,\n    showGroupList: false,\n});\n\nconst showUserNav = ref(false);\n\n//const username = 'Osminogka';\n</script>\n\n<template>\n    <div id=\"main-header\" class=\"main-header\">\n      <div class=\"main-header\">\n        <button id=\"showSideBar\" class=\"show-nav-button\" @click=\"rotateTag()\">\n        </button>\n        <h1 class=\"header-text\">That's Time!</h1>\n        <button id=\"user-icon-button\" @click=\"showUserNav = !showUserNav\" class=\"user-icon\" v-on-click-outside=\"hideUserNav\"></button>\n      </div>\n    </div>\n    <Transition name=\"usernav\">\n      <div id=\"usernavmenu\" v-show=\"showUserNav\" class=\"user-nav\">\n        <router-link to=\"/profile\" class=\"button-nav-user button-nav-profile\"></router-link>\n        <router-link to=\"/logout\" class=\"button-nav-user button-nav-logout\"></router-link>\n      </div>\n    </Transition>\n\n    <Transition name=\"sidebar\">\n      <div id=\"sidebar\" v-show=\"showInterface.showSideBar\" class=\"sidenav\" v-on-click-outside=\"hideSideBar\">\n        <router-link :to=\"{ name: 'AddFriend', query: { page: 0 } }\" class=\"add-button add-friend-button custom-button\" @click=\"hideSideBar\"></router-link>\n        <custom-hide-show :showInterface=\"showInterface.showFriendList\" @showList=\"showList\" :showType=\"'showFriendList'\">\n          Friends\n        </custom-hide-show>\n        <Transition name=\"navlists\">\n          <div v-if=\"showInterface.showFriendList\" class=\"main-nav-div\">\n            <div v-for=\"(friend ,index) in friendList\" :key=\"index\" class=\"sidebar-entity-box\">\n              <p style=\"display: inline;\">{{ friend.name }}</p>\n              <router-link :to=\"{ name: 'Friend', params: { nickname: friend.name } }\" class=\"button-nav custom-button\" @click=\"hideSideBar\"/>\n            </div>\n          </div>\n        </Transition>\n\n        <custom-hide-show :showInterface=\"showInterface.showGroupList\" @showList=\"showList\" :showType=\"'showGroupList'\">\n          Groups\n        </custom-hide-show>\n        <Transition name=\"navlists\">\n          <div v-if=\"showInterface.showGroupList\" class=\"main-nav-div\">\n            <div v-for=\"(group ,index) in groupList\" :key=\"index\" class=\"sidebar-entity-box\">\n              <p style=\"display: inline;\">{{ group.name }}</p>\n              <router-link :to=\"{ name: 'Group', params: { groupname: group.name } }\" class=\"button-nav custom-button\" @click=\"hideSideBar\"/>\n            </div>\n          </div>\n        </Transition>\n      </div>\n  </Transition>\n</template>"],"mappings":"AAKA,OAAOA,cAAc,MAAM,2BAA2B;AACtD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,UAAU,EAAEC,SAAS,QAAO,kBAAkB;;;;;;;IAPvD,MAAM,CAAC,0BAA0B,CAAC;IAClC,MAAM,CAAC,8BAA8B,CAAC;IACtC,MAAM,CAAC,+BAA+B,CAAC;IACvC,MAAM,CAAC,wBAAwB,CAAC;IAMhC,SAASC,WAAWA,CAAA,EAAG;MACrB,IAAGC,aAAa,CAACC,WAAW,IAAIC,KAAK,CAACC,MAAM,CAACC,EAAE,IAAI,aAAa,EAChE;QACEJ,aAAa,CAACC,WAAW,GAAG,KAAK;QACjCI,SAAS,CAAC,IAAI,CAAC;MACjB;IACF;IAEA,SAASC,WAAWA,CAAA,EAAG;MACrB,IAAGC,WAAW,CAACC,KAAK,IAAIN,KAAK,CAACC,MAAM,CAACC,EAAE,IAAI,kBAAkB,EAC3DG,WAAW,CAACC,KAAK,GAAG,KAAK;IAC7B;IAEAb,SAAS,CAAC,MAAM;MACdc,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEX,WAAW,CAAC;MAC9CU,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;MAC9C,IAAIK,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;MAE/DF,aAAa,CAACD,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAC5CC,aAAa,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;;QAEtC;QACAC,UAAU,CAAC,MAAM;UACfL,aAAa,CAACG,SAAS,CAACG,MAAM,CAAC,SAAS,CAAC;QAC3C,CAAC,EAAE,GAAG,CAAC;MACX,CAAC,CAAC;MAEA,MAAMC,UAAU,GAAGN,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACzD,MAAMM,OAAO,GAAGP,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAClD,IAAIO,aAAa,GAAGF,UAAU,CAACE,aAAa;MAC5C,IAAIC,gBAAgB,GAAIH,UAAU,CAACI,YAAY,GAAGF,aAAa,CAACE,YAAY,GAAI,GAAG,GAAG,EAAE;MACxFH,OAAO,CAACI,KAAK,CAACC,MAAM,GAAG,cAAc,GAAGH,gBAAgB,GAAG,KAAK;IAClE,CAAC,CAAC;IAEF,SAAShB,SAASA,CAACoB,UAAU,GAAG,KAAK,EAAE;MACrC,IAAIC,QAAQ,GAAG1B,aAAa,CAACC,WAAW;MACxC,IAAG,CAACwB,UAAU,EAAEC,QAAQ,GAAG,CAACA,QAAQ;MACpC1B,aAAa,CAACC,WAAW,GAAGyB,QAAQ;MACpC,IAAIC,SAAS,GAAGD,QAAQ,GAAG,eAAe,GAAG,cAAc;MAC3Dd,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACU,KAAK,CAACK,SAAS,GAAGD,SAAS;IACpE;IAEA,SAASE,QAAQA,CAACC,IAAI,EAAC;MACrB9B,aAAa,CAAC8B,IAAI,CAAC,GAAG,CAAC9B,aAAa,CAAC8B,IAAI,CAAC;IAC5C;IAEA,MAAM9B,aAAa,GAAGP,QAAQ,CAAC;MAC3BQ,WAAW,EAAE,KAAK;MAClB8B,cAAc,EAAE,KAAK;MACrBC,aAAa,EAAE;IACnB,CAAC,CAAC;IAEF,MAAMzB,WAAW,GAAGb,GAAG,CAAC,KAAK,CAAC;;IAE9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}